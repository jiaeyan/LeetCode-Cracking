package hashtable;

import java.util.HashMap;
import java.util.Map;

/*
 * Given two strings s and t which consist of only lowercase letters.
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * Find the letter that was added in t.
 * Example:
 * Input:
 * s = "abcd"
 * t = "abcde"
 * Output:
 * e
 * Explanation:
 * 'e' is the letter that was added.
 */

/*
 * Note that the added one can be a new letter, or a repeated letter, so purely a set operation is not enough.
 */

public class Find_the_Difference {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
	
	public char findTheDifference(String s, String t) {
        Map<Character, Integer> s_map = new HashMap<>();
        Map<Character, Integer> t_map = new HashMap<>();
        for (int i = 0; i < s.length(); i++){
            if (s_map.containsKey(s.charAt(i))){
                s_map.put(s.charAt(i), s_map.get(s.charAt(i))+1);
            }
            else {s_map.put(s.charAt(i), 1);}
        }
        for (int i = 0; i < t.length(); i++){
            if (t_map.containsKey(t.charAt(i))){
                t_map.put(t.charAt(i), t_map.get(t.charAt(i))+1);
            }
            else {t_map.put(t.charAt(i), 1);}
        }
        for (Map.Entry<Character, Integer> entry : t_map.entrySet()){
        	    Character key = entry.getKey();
            if (!s_map.containsKey(key)) {return key;}
            if (entry.getValue() == s_map.get(key) + 1) {return key;}
        }
        return 0;
    }

}
